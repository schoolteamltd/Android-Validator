buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
        mavenLocal()
    }

    dependencies {
      classpath 'com.android.tools.build:gradle:3.3.0'
    }
}

apply plugin: 'com.android.library'

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

sourceSets {
    testLocal {
        java.srcDir file('test')
        resources.srcDir file('test')
    }
}

android {
    namespace 'com.throrinstudio.android.common.libs.validator'
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    // tell Android studio that the instrumentTest source set is located in the unit test source set
    sourceSets {
        androidTest.setRoot('test')
    }
    buildFeatures {
        renderScript true
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    // Dependencies for the `testLocal` task, make sure to list all your global dependencies here as well
    // Android Studio doesn't recognize the `testLocal` task, so we define the same dependencies as above for instrumentTest
    // which is Android Studio's test task
    androidTestImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation 'org.robolectric:robolectric:2.+'
    androidTestImplementation 'com.google.android:android:4.1.1.4'
}

task localTest(type: Test, dependsOn: assemble) {
    //testClassesDir = sourceSets.testLocal.output.classesDir

    android.sourceSets.main.java.srcDirs.each { dir ->
        def buildDir = dir.getAbsolutePath().split('/')
        buildDir =  (buildDir[0..(buildDir.length - 4)] + ['build', 'classes', 'debug']).join('/')

        sourceSets.testLocal.compileClasspath += files(buildDir)
        sourceSets.testLocal.runtimeClasspath += files(buildDir)
    }

    classpath = sourceSets.testLocal.runtimeClasspath
}
